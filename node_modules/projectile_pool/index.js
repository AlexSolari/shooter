var projectileFactory = require("projectile");
var vectorFactory = require("vector");

function ProjectilePool(quantity) {
    
    this.projectiles = [];
    
    for (var i = 0; i < quantity; i++) {
        this.projectiles.push(projectileFactory.CreateProjectile(0, 0, vectorFactory.CreateVector(), null));
    }
    
}

ProjectilePool.prototype.GetProjectile = function(x, y, direction, emitter) {
    
    var projectile = this.projectiles.pop();
    
    if (!projectile){
        projectile = projectileFactory.CreateProjectile(x, y, vectorFactory.CreateVector(0, 0, direction.x, direction.y, 15), emitter);
        return projectile;
    }
    projectile.x = x;
    projectile.y = y;
    projectile.speed = vectorFactory.CreateVector(0, 0, direction.x, direction.y, 15);

    projectile.emitter = emitter;
    
    return projectile;
    
}

ProjectilePool.prototype.ReleaseProjectile = function(projectile) { 

    projectile.x = 0;
    projectile.y = 0;
    projectile.speed = null;
    projectile.emitter = null;
    projectile.markedForRemove = false;
    
    this.projectiles.push(projectile);
    
}

module.exports = new ProjectilePool(100);