/* --- Vector --- */

function Vector(x1, y1, x2, y2, limit) {
    x1 = x1 || 0;
    y1 = y1 || 0;
    x2 = x2 || 0;
    y2 = y2 || 0;

    this.x = x2 - x1;
    this.y = y2 - y1;
    this.magnitude = Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));

    if (limit) {
        this.Limit(limit);
    }

}

Vector.prototype.Limit = function(limit) {
    if (this.magnitude > 0)
    {
        this.x = this.x * limit / this.magnitude;
        this.y = this.y * limit / this.magnitude;
    }
};

Vector.prototype.AngleBetween = function(vector) {

    var angleForeign = Math.atan2(vector.y, vector.x);
    var angleThis = Math.atan2(this.y, this.x);

    var angleBetween = (angleForeign - angleThis) / Math.PI * 180;
    if (angleBetween > 0) return angleBetween;
    else return 360 + angleBetween;
}


Vector.prototype.Add = function(vector) {
    this.x += vector.x;
    this.y += vector.y;
    this.magnitude = Math.sqrt(Math.pow(this.x, 2) + Math.pow(this.y, 2));
};

function VectorFactory() {}

VectorFactory.prototype.CreateVector = function(x1, y1, x2, y2, limit) {
    return new Vector(x1, y1, x2, y2, limit);
}

module.exports = new VectorFactory();